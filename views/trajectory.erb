<% content_for :scripts do %>
    <link href='//api.tiles.mapbox.com/mapbox.js/v1.6.0/mapbox.css' rel='stylesheet' />
    <script src='//api.tiles.mapbox.com/mapbox.js/v1.6.0/mapbox.js'></script>
    <script type="text/javascript">
        var map;

        $(document).ready(function() {


            var layers = {
                "MapBox": L.mapbox.tileLayer('alexnorton.h2hfjmmo', {detectRetina: true}),
                "Mapnik": L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'),
                "Esri WorldStreetMap": L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}'),
                "Esri WorldTopoMap": L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}'),
                "Esri WorldImagery": L.tileLayer('http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {detectRetina: true}),
                "MapQuest Open": L.tileLayer('http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.jpeg', {subdomains: '1234'})
            }

            var map = L.map('map_canvas', {layers: layers.MapBox});

            L.control.layers(layers).addTo(map);

            $.getJSON("/trajectories/<%= @trajectory.id %>.json", function(data) {
                var polylineLayer = L.geoJson(data);
                polylineLayer.addTo(map);
                map.fitBounds(polylineLayer.getBounds());
            });

            $.getJSON("/trajectories/<%= @trajectory.id %>/staypoints.json", function(data) {
                L.geoJson(data, {
                    pointToLayer: function (feature, latlng) {
                        var circle = L.circle(latlng, 200, {
                            color: 'red',
                            fillColor: '#f03',
                            fillOpacity: 0.5
                        });

                        var popup = L.popup({offset: L.point(0, 50), maxWidth: 500}).setContent("<strong>Arrival time:</strong> " + feature.properties.arrival_time +
                                "<br>" +
                                "<strong>Departure time:</strong> " + feature.properties.departure_time +
                                "<br>" +
                                "<strong>Visit length:</strong> " + millisecondsToPrettyTime(new Date(feature.properties.departure_time) - new Date(feature.properties.arrival_time))).setLatLng(latlng);

                        circle.bindPopup(popup);

                        return circle;
                    }
                }).addTo(map);
            });
        });

        var millisecondsToPrettyTime = function(milliseconds) {
            var diff = milliseconds;

            var hours = Math.floor(diff / (1000 * 60 * 60));
            diff -= hours * (1000 * 60 * 60);

            var mins = Math.floor(diff / (1000 * 60));
            diff -= mins * (1000 * 60);

            var seconds = Math.floor(diff / (1000));
            diff -= seconds * (1000);

            return hours + " hours, " + mins + " minutes, " + seconds + " seconds";
        }
    </script>
<% end %>
<h2>Trajectory <%= @trajectory.id %></h2>
<p>
  <strong>User:</strong> <%= @trajectory.user.name %><br />
  <strong>Start date:</strong> <%= @trajectory.start_date %><br />
  <strong>End date:</strong> <%= @trajectory.end_date %><br />
  <strong>Duration:</strong> <%= (@trajectory.end_date - @trajectory.start_date).duration %><br />
  <strong>Point count:</strong> <%= @trajectory.points_count %><br />
</p>
<div id="map_canvas" style="width: 100%; height: 600px;"></div>
<h3>Stay point sets</h3>
<table class="table">
  <thead>
    <tr>
      <th>#</th>
      <th>Distance threshold</th>
      <th>Time threshold</th>
      <th>Stay points</th>
    </tr>
  </thead>
  <tbody>
    <% @trajectory.stay_point_sets.each do |stay_point_set| %>
        <tr>
          <td><%= stay_point_set.id %></td>
          <td><%= stay_point_set.distance_threshold %> metres</td>
          <td><%= stay_point_set.time_threshold %> seconds</td>
          <td><%= stay_point_set.stay_points.count %></td>
        </tr>
    <% end %>
  </tbody>
</table>